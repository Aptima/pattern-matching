/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package influent.idl;

@SuppressWarnings("all")
/** This defines an API for */
@org.apache.avro.specific.AvroGenerated
public interface FL_FutureResults {
  public static final org.apache.avro.Protocol PROTOCOL = org.apache.avro.Protocol.parse("{\"protocol\":\"FL_FutureResults\",\"namespace\":\"influent.idl\",\"doc\":\"This defines an API for\",\"types\":[{\"type\":\"enum\",\"name\":\"FL_PropertyTag\",\"doc\":\"Tags are defined by the application layer as a taxonomy of user and application concepts,\\r\\n\\t independent of the data sources. This allows application semantics to be re-used with new\\r\\n\\t data, with a minimum of new software design and development. Data layer entity types, link\\r\\n\\t types and properties should be mapped into the list of tags. The application layer must be\\r\\n\\t able to search by native field name or by tag interchangeably, and properties returned must\\r\\n\\t contain both native field names as well as tags.\\r\\n\\t \\r\\n\\t The list of tags may change as application features evolve, though that will require\\r\\n\\t collaboration with the data layer providers. Evolving the tag list should not change the\\r\\n\\t Data Access or Search APIs.\\r\\n\\r\\n\\t This is the current list of tags for Properties:\",\"symbols\":[\"ID\",\"TYPE\",\"LABEL\",\"STAT\",\"TEXT\",\"LINKED_DATA\",\"IMAGE\",\"GEO\",\"DATE\",\"AMOUNT\",\"CREDIT\",\"DEBIT\",\"COUNT\",\"SERIES\",\"CONSTRUCTED\",\"RAW\"]},{\"type\":\"enum\",\"name\":\"FL_EntityTag\",\"doc\":\"This is the current list of tags for Entities:\",\"symbols\":[\"ACCOUNT\",\"GROUP\",\"CLUSTER\",\"FILE\",\"ANONYMOUS\",\"OTHER\"]},{\"type\":\"enum\",\"name\":\"FL_LinkTag\",\"doc\":\"This is the current list of tags for Links:\",\"symbols\":[\"FINANCIAL\",\"SOCIAL\",\"COMMUNICATION\",\"OTHER\"]},{\"type\":\"enum\",\"name\":\"FL_PropertyType\",\"doc\":\"Allowed types for Property values.\",\"symbols\":[\"DOUBLE\",\"LONG\",\"BOOLEAN\",\"STRING\",\"DATE\",\"GEO\",\"SERIES\",\"OTHER\"]},{\"type\":\"record\",\"name\":\"FL_Provenance\",\"doc\":\"This is a placeholder for future modeling of provenance. It is not a required field in any service calls.\",\"fields\":[{\"name\":\"uri\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Placeholder for now. Express provenance as a single URI.\"}]},{\"type\":\"record\",\"name\":\"FL_Uncertainty\",\"doc\":\"This is a placeholder for future modeling of uncertainty. It is not a required field in any service calls.\",\"fields\":[{\"name\":\"confidence\",\"type\":\"double\",\"doc\":\"Placeholder for now. Express uncertainty as a single number from 0 to 1.\",\"default\":1}]},{\"type\":\"record\",\"name\":\"FL_LinkedData\",\"doc\":\"A URL and MIME type representing a pointer to text, image or other external resource.\",\"fields\":[{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"URL of the resource\"},{\"name\":\"mimeType\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"MIME type of the resource\",\"default\":null},{\"name\":\"title\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"description of the linked resource (suitable for display to the user in an hypertext link)\",\"default\":null}]},{\"type\":\"record\",\"name\":\"FL_GeoData\",\"doc\":\"Structured representation of geo-spatial data.\",\"fields\":[{\"name\":\"text\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"an address or other place reference; unstructured text field\",\"default\":null},{\"name\":\"lat\",\"type\":[\"double\",\"null\"],\"doc\":\"latitude\",\"default\":null},{\"name\":\"lon\",\"type\":[\"double\",\"null\"],\"doc\":\"longitude\",\"default\":null},{\"name\":\"cc\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"ISO 3 digit country code\",\"default\":null}]},{\"type\":\"record\",\"name\":\"FL_Series\",\"doc\":\"This is a placeholder for timeseries and other series that are available as property values, which the UI will use to make\\r\\n\\t charts. This may come back from aggregating links.\",\"fields\":[]},{\"type\":\"record\",\"name\":\"FL_Property\",\"doc\":\"Each property on an Entity or Link is a name-value pair, with data type information, as well as optional\\r\\n\\t provenance. Tags provide a way for the data provider to associate semantic annotations to each property\\r\\n\\t in terms of the semantics of the application.\",\"fields\":[{\"name\":\"key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"the field name in the underlying data source\"},{\"name\":\"friendlyText\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"user-friendly short-text for key (displayable)\",\"default\":null},{\"name\":\"value\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"int\",\"float\",\"double\",\"long\",\"boolean\",\"FL_GeoData\",\"FL_Series\",\"null\"],\"default\":null},{\"name\":\"type\",\"type\":\"FL_PropertyType\",\"doc\":\"One of DOUBLE, LONG, BOOLEAN, STRING, DATE, GEO, SERIES, OTHER\"},{\"name\":\"provenance\",\"type\":[\"FL_Provenance\",\"null\"],\"default\":null},{\"name\":\"uncertainty\",\"type\":[\"FL_Uncertainty\",\"null\"],\"default\":null},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":\"FL_PropertyTag\"},\"doc\":\"one or more tags from the Tag list, used to map this source-specific field into the semantics of applications\"}]},{\"type\":\"record\",\"name\":\"FL_Entity\",\"doc\":\"The nodes in the social, financial, communications or other graphs. May represent concrete individuals or organizations,\\r\\n\\t specific proxies such as accounts, or the implicit individuals or groups behind those other entities.\",\"fields\":[{\"name\":\"uid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"This uid must represent either (1) a globally unique identifier that can be used to retrieve data for an\\r\\n\\t\\t\\texplicit entity, or (2) encoded query information that can be used to find a set of associated record\\r\\n\\t\\t\\tnotionally representing an implicit entity (e.g. Loans&FirstName&LastName&Gender). Must not be used for\\r\\n\\t\\t\\tIDs that aren't globally unique.  For example, in Kiva, \\\"Lenders\\\" has a UID (\\\"L12345\\\") while \\\"Borrowers\\\"\\r\\n\\t\\t\\thave an encoded search in the Loans table for uid (\\\"B{loan:23456;name=Daniel}\\\").  The encoded information\\r\\n\\t\\t\\tis data layer-specific, may be different from entity to entity or data set to data set, and should be\\r\\n\\t\\t\\tconsidered opaque to the consumers of the entities.  Entities of type 2 should always have the Entity Tag\\r\\n\\t\\t\\tANONYMOUS to help distinguish them when required.\"},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":\"FL_EntityTag\"},\"doc\":\"Entity Tags (see above, e.g. \\\"ACCOUNT\\\")\"},{\"name\":\"provenance\",\"type\":[\"FL_Provenance\",\"null\"],\"default\":null},{\"name\":\"uncertainty\",\"type\":[\"FL_Uncertainty\",\"null\"],\"default\":null},{\"name\":\"properties\",\"type\":{\"type\":\"array\",\"items\":\"FL_Property\"}}]},{\"type\":\"record\",\"name\":\"FL_Link\",\"doc\":\"* The links in the social, financial, communications or other graphs. May represent communication events, financial transactions\\r\\n\\t * or social connections.\",\"fields\":[{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":\"FL_LinkTag\"},\"doc\":\"Link Tags (see above, e.g. \\\"FINANCIAL\\\")\"},{\"name\":\"source\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"source entity uid\",\"default\":null},{\"name\":\"target\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"target entity uid\",\"default\":null},{\"name\":\"directed\",\"type\":\"boolean\",\"doc\":\"true if directed, false if undirected\",\"default\":true},{\"name\":\"provenance\",\"type\":[\"FL_Provenance\",\"null\"],\"default\":null},{\"name\":\"uncertainty\",\"type\":[\"FL_Uncertainty\",\"null\"],\"default\":null},{\"name\":\"properties\",\"type\":{\"type\":\"array\",\"items\":\"FL_Property\"}}]},{\"type\":\"record\",\"name\":\"FL_Cluster\",\"doc\":\"Cluster of nodes in the social, financial, communications or other graphs.\",\"fields\":[{\"name\":\"uid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"A unique identifier use to retrieve data about this cluster. Should not be used for non-global identifiers.\"},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":\"FL_EntityTag\"},\"doc\":\"Entity Tags (see DataTypes, e.g. \\\"CLUSTER\\\")\"},{\"name\":\"provenance\",\"type\":[\"FL_Provenance\",\"null\"],\"default\":null},{\"name\":\"uncertainty\",\"type\":[\"FL_Uncertainty\",\"null\"],\"default\":null},{\"name\":\"properties\",\"type\":{\"type\":\"array\",\"items\":\"FL_Property\"}},{\"name\":\"members\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"List of id's of the members of this cluster - can be either entity id's or cluster id's if this is a cluster in a hierarchy\"},{\"name\":\"parent\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"The id of the parent cluster if this is a cluster in a hierarchy - Can be null if this is a root cluster *\",\"default\":null},{\"name\":\"root\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"The id of the root cluster (top level cluster) if this is a cluster in a hierarchy - Can be null if this is a root cluster *\",\"default\":null},{\"name\":\"level\",\"type\":\"int\",\"doc\":\"The degree from the root this cluster is in the hierarchy - level = 0 if this is a root cluster *\",\"default\":0}]},{\"type\":\"record\",\"name\":\"FL_Future\",\"doc\":\"Represents the future results of an asyncrhonous task.\\r\\n\\t Can be passed into the FutureResults service API\",\"fields\":[{\"name\":\"uid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"unique id of this task\"},{\"name\":\"label\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"short human-readable description of task for display\"},{\"name\":\"service\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"uid of the service task is running on\",\"default\":null},{\"name\":\"started\",\"type\":\"long\",\"doc\":\"date/time task was started\"},{\"name\":\"completed\",\"type\":\"long\",\"doc\":\"date/time task was completed (negative if not completed yet)\",\"default\":-1}]},{\"type\":\"record\",\"name\":\"FL_Service\",\"doc\":\"Selectable services, returned by getServices() in various APIs\",\"fields\":[{\"name\":\"uid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"unique id of this service\"},{\"name\":\"label\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"short human-readable description of service for display\"}]}],\"messages\":{\"setTimeout\":{\"doc\":\"Set a timeout for the task.\\r\\n\\t \\r\\n\\t Service URL: /future/timeout\\r\\n\\t HTTP Method: POST or GET\\r\\n\\t \\r\\n\\t @param future \\t\\tthe future returned from the original call\\r\\n\\t @param timeout\\t\\tonce set, task will terminate after specified time (in seconds)\",\"request\":[{\"name\":\"future\",\"type\":\"FL_Future\"},{\"name\":\"timeout\",\"type\":\"long\"}],\"response\":\"null\"},\"getCompleted\":{\"doc\":\"Execution state of task.\\r\\n\\t \\r\\n\\t Service URL: /future/completed\\r\\n\\t HTTP Method: POST or GET\\r\\n\\t \\r\\n\\t @param future \\t\\tthe future returned from the original call\\r\\n\\t @return \\t\\t\\tfalse while still processing, true if completed (successfully or not)\",\"request\":[{\"name\":\"future\",\"type\":\"FL_Future\"}],\"response\":\"boolean\"},\"getError\":{\"doc\":\"Error occured during task.\\r\\n\\t \\r\\n\\t Service URL: /future/error\\r\\n\\t HTTP Method: POST or GET\\r\\n\\t \\r\\n\\t @param future \\t\\tthe future returned from the original call\\r\\n\\t @return \\t\\t\\tif the task completed due to an error, a description of the error\",\"request\":[{\"name\":\"future\",\"type\":\"FL_Future\"}],\"response\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},\"getProgress\":{\"doc\":\"Estimated progress of task.\\r\\n\\t \\r\\n\\t Service URL: /future/progress\\r\\n\\t HTTP Method: POST or GET\\r\\n\\t \\r\\n\\t @param future \\t\\tthe future returned from the original call\\r\\n\\t @return \\t\\t\\testimated progress of the task (in seconds), negative if unknown\",\"request\":[{\"name\":\"future\",\"type\":\"FL_Future\"}],\"response\":\"double\"},\"getExpectedDuration\":{\"doc\":\"Estimated duration of task, or time remaining (if in progress).\\r\\n\\t Must be a valid time. Use an estimated order of magnitude if exact times aren't known.\\r\\n\\t \\r\\n\\t Service URL: /future/duration\\r\\n\\t HTTP Method: POST or GET\\r\\n\\t \\r\\n\\t @param future \\t\\tthe future returned from the original call\\r\\n\\t @return \\t\\t\\testimated duration (or time remaining) of the task (in seconds)\",\"request\":[{\"name\":\"future\",\"type\":\"FL_Future\"}],\"response\":\"long\"},\"stop\":{\"doc\":\"Stop/cancel a running task. No effect if task is completed.\\r\\n\\t \\r\\n\\t Service URL: /future/stop\\r\\n\\t HTTP Method: POST or GET\\r\\n\\t \\r\\n\\t @param future \\t\\tthe future returned from the original call\",\"request\":[{\"name\":\"future\",\"type\":\"FL_Future\"}],\"response\":\"null\"},\"getFutures\":{\"doc\":\"List the running (or recently completed but not garbage collected) tasks.\\r\\n\\t \\r\\n\\t Service URL: /future/list\\r\\n\\t HTTP Method: POST or GET\\r\\n\\t \\r\\n\\t @return\\t\\t\\tlist of running (or recently completed) futures\",\"request\":[],\"response\":{\"type\":\"array\",\"items\":\"FL_Future\"}}}}");
  /** Set a timeout for the task.
	 
	 Service URL: /future/timeout
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @param timeout		once set, task will terminate after specified time (in seconds) */
  java.lang.Void setTimeout(influent.idl.FL_Future future, long timeout) throws org.apache.avro.AvroRemoteException;
  /** Execution state of task.
	 
	 Service URL: /future/completed
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @return 			false while still processing, true if completed (successfully or not) */
  boolean getCompleted(influent.idl.FL_Future future) throws org.apache.avro.AvroRemoteException;
  /** Error occured during task.
	 
	 Service URL: /future/error
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @return 			if the task completed due to an error, a description of the error */
  java.lang.String getError(influent.idl.FL_Future future) throws org.apache.avro.AvroRemoteException;
  /** Estimated progress of task.
	 
	 Service URL: /future/progress
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @return 			estimated progress of the task (in seconds), negative if unknown */
  double getProgress(influent.idl.FL_Future future) throws org.apache.avro.AvroRemoteException;
  /** Estimated duration of task, or time remaining (if in progress).
	 Must be a valid time. Use an estimated order of magnitude if exact times aren't known.
	 
	 Service URL: /future/duration
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @return 			estimated duration (or time remaining) of the task (in seconds) */
  long getExpectedDuration(influent.idl.FL_Future future) throws org.apache.avro.AvroRemoteException;
  /** Stop/cancel a running task. No effect if task is completed.
	 
	 Service URL: /future/stop
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call */
  java.lang.Void stop(influent.idl.FL_Future future) throws org.apache.avro.AvroRemoteException;
  /** List the running (or recently completed but not garbage collected) tasks.
	 
	 Service URL: /future/list
	 HTTP Method: POST or GET
	 
	 @return			list of running (or recently completed) futures */
  java.util.List<influent.idl.FL_Future> getFutures() throws org.apache.avro.AvroRemoteException;

  @SuppressWarnings("all")
  /** This defines an API for */
  public interface Callback extends FL_FutureResults {
    public static final org.apache.avro.Protocol PROTOCOL = influent.idl.FL_FutureResults.PROTOCOL;
    /** Set a timeout for the task.
	 
	 Service URL: /future/timeout
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @param timeout		once set, task will terminate after specified time (in seconds) */
    void setTimeout(influent.idl.FL_Future future, long timeout, org.apache.avro.ipc.Callback<java.lang.Void> callback) throws java.io.IOException;
    /** Execution state of task.
	 
	 Service URL: /future/completed
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @return 			false while still processing, true if completed (successfully or not) */
    void getCompleted(influent.idl.FL_Future future, org.apache.avro.ipc.Callback<java.lang.Boolean> callback) throws java.io.IOException;
    /** Error occured during task.
	 
	 Service URL: /future/error
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @return 			if the task completed due to an error, a description of the error */
    void getError(influent.idl.FL_Future future, org.apache.avro.ipc.Callback<java.lang.String> callback) throws java.io.IOException;
    /** Estimated progress of task.
	 
	 Service URL: /future/progress
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @return 			estimated progress of the task (in seconds), negative if unknown */
    void getProgress(influent.idl.FL_Future future, org.apache.avro.ipc.Callback<java.lang.Double> callback) throws java.io.IOException;
    /** Estimated duration of task, or time remaining (if in progress).
	 Must be a valid time. Use an estimated order of magnitude if exact times aren't known.
	 
	 Service URL: /future/duration
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call
	 @return 			estimated duration (or time remaining) of the task (in seconds) */
    void getExpectedDuration(influent.idl.FL_Future future, org.apache.avro.ipc.Callback<java.lang.Long> callback) throws java.io.IOException;
    /** Stop/cancel a running task. No effect if task is completed.
	 
	 Service URL: /future/stop
	 HTTP Method: POST or GET
	 
	 @param future 		the future returned from the original call */
    void stop(influent.idl.FL_Future future, org.apache.avro.ipc.Callback<java.lang.Void> callback) throws java.io.IOException;
    /** List the running (or recently completed but not garbage collected) tasks.
	 
	 Service URL: /future/list
	 HTTP Method: POST or GET
	 
	 @return			list of running (or recently completed) futures */
    void getFutures(org.apache.avro.ipc.Callback<java.util.List<influent.idl.FL_Future>> callback) throws java.io.IOException;
  }
}